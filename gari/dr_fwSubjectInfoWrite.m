function dt = dr_fwSubjectInfoWrite(serverName, collectionName, jsonString)
% Create a collection with all the sessions that need the files edited
% This function will be generic, for now, it is intended to add the DWI
% information to the HCP preprocessed and bVal splitted .bval, .bvec and dwu
% files.


% Example inputs to make it work
%{
serverName     = 'stanfordlabs';
collectionName = 'HCP-DES'; % 'FWmatlabAPI_test';
%}

%% 0.- Connect to the session where the example dicom header json is
st = scitran(serverName);
if ~st.verify
    error(fprintf('Connection to %s could not be veryfied', serverName))
end

%% 1.- Connect to the collection, verify it and show the number of sessions for verification
% FC: obtain collection ID from the collection name
collectionID = '';
collections  = st.fw.getAllCollections();
for nc=1:length(collections)
    if strcmp(collections{nc}.label, collectionName)
        collectionID = collections{nc}.id;
    end
end

if isempty(collectionID)
    error(string(fprintf('Collection %s could not be found on the server %s (verify permissions or the collection name).\n', collectionName, serverName)))
else
    thisCollection        = st.fw.getCollection(collectionID);
    sessionsInCollection  = st.fw.getCollectionSessions(idGet(thisCollection));
    fprintf('There are %i sessions in the collection %s (server %s).\n', length(sessionsInCollection), collectionName, serverName)
end

%% 2.- Read the information for the different projects
% Afterwards they will be used in a switch-case to upgrade individual projects
% Read the csv attached to the project with all the info



%%%%% {'HCP_preproc'} %%%%% 
%{
projectID = '5aef288355d2500019bc8070'; % from url
fileName  = 'HCP_behav_all.csv';        % from GUI
behavData = readtable(st.fw.downloadFileFromProject(projectID, fileName, fullfile(afqDimPath,'local','tmp','tmp.csv')));
% Not working: hack, use the download link generated by the download
% button in the GUI
downloadLinkFromGUI = 'https://storage.googleapis.com/stanfordlabs-flywheel-data/e2%2F73%2Fe2731499-b164-4599-afd4-e2f61a0a6c8d?response-content-type=text%2Fcsv&Expires=1532432579&response-content-disposition=attachment%3B+filename%3DHCP_behav_all.csv&GoogleAccessId=flywheel-object-storage%40som-vistalab.iam.gserviceaccount.com&Signature=RI7z0b19e9fwFaYypi40gxXkNumpHD2ll3omVlZvrjwHfysStk0JXpt4%2FfYKsqR%2Bc7xbLxRsmtTQpvW%2F1gllP%2B9eA2Sl0oCfSt9ObTSG6xcNaFMqpcEfP5ApBa4LT3Jbo%2BDmEqHDgn5nxtTswCkVzK3T6fBwMi2MHl0cTSV5REgcJuz2ylNHwA6YYT%2BwzA8Zmzp69NRMPgjO7BG%2FoOqIvZXkmGx6naBSoSOh3%2BCCqp3K%2Bh0A%2F%2BeqByB7LpK4TbmWWg0NA4GY1oTlRzyWDXtDDdjvbgtD%2BCEEw5R0Cuci%2Bldw5ABag3hWKmYPmvqyXyFN5iA5PQAAIzeyQwHlLK%2BQlQ%3D%3D';
HCP_behavData = readtable(websave('tmp', downloadLinkFromGUI));
%}

%%%%% {'BCBL_MINI'} %%%%% 
% {
%}

%%%%% {'BCBL_ILLITERATES'} %%%%% 
%{
projectID = '5b8aae8bf591ed001496bb8b'; % from url
fileName  = 'Literacy_Participants_KPG - SeguimientoAnalysis.csv';        % from GUI
behavData = readtable(st.fw.downloadFileFromProject(projectID, fileName, fullfile(afqDimPath,'local','tmp','tmp.csv')));
% Not working: copy manually locally
behavData = readtable(fullfile(afqDimPath,'local','tmp','Literacy_Participants_KPG - SeguimientoAnalysis.csv'));
%}

%%%%% {'CoRR'} %%%%% 
% {
% projectID = '5b666305493b31000f59f7f5'; % from url
% fileName  = '6720_CoRR_Data_Legend_20180626_oneHeader.csv';        % from GUI
% behavData = readtable(st.fw.downloadFileFromProject(projectID, fileName, fullfile(afqDimPath,'local','tmp','tmp.csv')));
%}

%%%%% {'HCP-DES'} %%%%% 
%{
projectID = '5da114858fceb8003e3a4e50'; % from url
fileName  = 'questforgari.csv';        % from GUI
behavData = readtable(st.fw.downloadFileFromProject(projectID, fileName, fullfile(paperReprPath,'local','tmp','tmp.csv')));
% Not working: hack, use the download link generated by the download
% button in the GUI
downloadLinkFromGUI = 'https://storage.googleapis.com/stanfordlabs-flywheel-data/e2%2F73%2Fe2731499-b164-4599-afd4-e2f61a0a6c8d?response-content-type=text%2Fcsv&Expires=1532432579&response-content-disposition=attachment%3B+filename%3DHCP_behav_all.csv&GoogleAccessId=flywheel-object-storage%40som-vistalab.iam.gserviceaccount.com&Signature=RI7z0b19e9fwFaYypi40gxXkNumpHD2ll3omVlZvrjwHfysStk0JXpt4%2FfYKsqR%2Bc7xbLxRsmtTQpvW%2F1gllP%2B9eA2Sl0oCfSt9ObTSG6xcNaFMqpcEfP5ApBa4LT3Jbo%2BDmEqHDgn5nxtTswCkVzK3T6fBwMi2MHl0cTSV5REgcJuz2ylNHwA6YYT%2BwzA8Zmzp69NRMPgjO7BG%2FoOqIvZXkmGx6naBSoSOh3%2BCCqp3K%2Bh0A%2F%2BeqByB7LpK4TbmWWg0NA4GY1oTlRzyWDXtDDdjvbgtD%2BCEEw5R0Cuci%2Bldw5ABag3hWKmYPmvqyXyFN5iA5PQAAIzeyQwHlLK%2BQlQ%3D%3D';
HCP_behavData = readtable(websave('tmp', downloadLinkFromGUI));
behavData.participant_id = strcat("sub-",behavData.participant_id);
%}

%% 3.- Find all the files we want to upgrade
for ns=1:length(sessionsInCollection)
    % Get info for the session
    thisSession = sessionsInCollection{ns};
    % Get info for the project the session belong to
    thisProject = st.fw.getProject(thisSession.project);
    
    
    fprintf('Working in session: %s >> %s (%s)\n', thisProject.label, thisSession.subject.code, thisSession.label)
    % Only apply it to HCP for now, or use this to discriminate between projects
    % when upgrading
    switch thisProject.label
        case {'HCP_preproc'}
            thisRow = HCP_behavData(strcmp(string(thisSession.subject.code),string(HCP_behavData.Subject)),:);
            switch thisRow.Age{1}
                case {'36+'}
                    AGE = 365*24*60*60*(38);
                otherwise
                    AGE = 365*24*60*60*(mean(str2num(regexprep(thisRow.Age{1},'-',','))));
            end
            if strcmp('M',thisRow.Gender)
                GENDER = 'male';
            else
                GENDER = 'female';
            end
                        
            subjectDetail = struct('firstname', 'hcpFirstName', ...
                                   'lastname', 'hcpLastName', ...
                                   'age', AGE, ...
                                   'sex', GENDER, ...
                                   'info', struct('ReadEng_AgeAdj', thisRow.ReadEng_AgeAdj));
            st.fw.modifySession(idGet(thisSession), struct('subject', subjectDetail));
        case {'PRATIK'} 
            subjectDetail = struct('firstname', 'pratikFirstName', ...
                                   'lastname', 'pratikLastName', ...
                                   'info', struct('ReadEng_AgeAdj', 999));
            st.fw.modifySession(idGet(thisSession), struct('subject', subjectDetail));
        case {'BCBL_ILLITERATES'}
            subjectDetail = struct('firstname', 'hcpFirstName', ...
                                   'lastname', 'hcpLastName', ...
                                   'age', 999, ...
                                   'sex', 'female', ...
                                   'info', struct('ReadEng_AgeAdj', 999));
            st.fw.modifySession(idGet(thisSession), struct('subject', subjectDetail));        
        case {'CoRR'}
            thisRow = behavData(strcmp(string(thisSession.subject.code), ...
                                       string(behavData.AnonymizedID)), ...
                                [1,3,5:7,17:19]);
            thisRow.Visit = categorical(thisRow.Visit);
            AGE = thisRow.AGE_AT_SCAN_1(thisRow.Visit=='Baseline');
            AGE = str2num(AGE{1});
                            
            if strcmp('2',thisRow.Gender)
                % I HAVE NO IDEA WHAT 1 or 2 MEANS!!!!!!!!
                GENDER = 'male';
            else
                GENDER = 'female';
            end
                        
            subjectDetail = struct('firstname', 'CoRRFirstName', ...
                                   'lastname', 'CoRRLastName', ...
                                   'age', AGE, ...
                                   'sex', GENDER, ...
                                   'info', struct('ReadEng_AgeAdj', thisRow.ReadEng_AgeAdj));
            st.fw.modifySession(idGet(thisSession), struct('subject', subjectDetail));
        case {'HCP-DES'}
            thisRow = behavData(strcmp(string(thisSession.subject.code),string(behavData.participant_id)),:);

            if thisRow.gender == 1
                GENDER = 'female';
            end
            if thisRow.gender == 2
                GENDER = 'male';
            end
            if thisRow.gender == 3
                GENDER = 'other';
            end
                
            
            if isempty(thisRow.major_depression);major_depression='';else; major_depression=logical(thisRow.major_depression);end
            if isempty(thisRow.anxiety);anxiety='';else anxiety = logical(thisRow.anxiety);end
            if isempty(thisRow.masq_dep);masq_dep='';else masq_dep=str2num(thisRow.masq_dep{:});end
            if isempty(thisRow.masq_anx);masq_anx='';else masq_anx=str2num(thisRow.masq_anx{:});end
            if isempty(thisRow.masq_mix);masq_mix='';else masq_mix=str2num(thisRow.masq_mix{:});end
            if isempty(thisRow.dass_dep);dass_dep='';else dass_dep=str2num(thisRow.dass_dep{:});end
            if isempty(thisRow.dass_anx);dass_anx='';else dass_anx=str2num(thisRow.dass_anx{:});end
            if isempty(thisRow.dass_str);dass_str='';else dass_str=str2num(thisRow.dass_str{:});end
       
            
            subjectDetail = struct('firstname', 'hcp-des_FirstName', ...
                                   'lastname', 'hcp-des_LastName', ...
                                   'age', int64(round(thisRow.demo_age)), ...
                                   'sex', GENDER, ...
                                   'info', struct('major_depression', major_depression, ...
                                                  'anxiety' , anxiety,...
                                                  'masq_dep',  masq_dep,...
                                                  'masq_anx', masq_anx,...
                                                  'masq_mix', masq_mix,...
                                                  'dass_dep', dass_dep,...
                                                  'dass_anx', dass_anx,...
                                                  'dass_str', dass_str));
            st.fw.modifySession(idGet(thisSession), struct('subject', subjectDetail));            
        case {'BCBL'}
            disp('not implemented yet.')
        otherwise
            disp('')
    end

end





















